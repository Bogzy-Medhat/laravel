name: Backend CI/CD

on:
  push:
    branches:
      - 11.x

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Build Docker image
      run: |
        docker build -t kelompok11/laravel .

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Set up SSH
      run: |
        echo "${{ secrets.EC2_PRIVATE_KEY }}" > ~/ec2_key.pem
        chmod 600 ~/ec2_key.pem

    - name: SSH into EC2 and deploy
      run: |
        ssh -o StrictHostKeyChecking=no -o ServerAliveInterval=60 -o ServerAliveCountMax=5 -i ~/ec2_key.pem ubuntu@${{ secrets.BACKEND_IP }} << 'EOF'
            # Ensure Laravel directory exists
            mkdir -p /home/ubuntu/laravel

            # Clone the repo if not already present
            if [ ! -d "/home/ubuntu/laravel/.git" ]; then
                git clone https://github.com/Bogzy-Medhat/laravel.git /home/ubuntu/laravel
            fi

            cd /home/ubuntu/laravel

            # Pull latest changes
            git pull origin 11.x

            # Copy environment file if .env doesn't exist
            if [ ! -f ".env" ]; then
              if [ -f ".env.example" ]; then
                cp .env.example .env
              else
                echo ".env.example file not found!"
                exit 1
              fi
            fi

            # Install Composer dependencies
            if [ -f "composer.json" ]; then
              composer install --no-interaction --prefer-dist --optimize-autoloader
            else
              echo "composer.json not found!"
              exit 1
            fi

            # Run migrations and caching if artisan exists
            if [ -f "artisan" ]; then
              php artisan migrate --force
              php artisan db:seed --force
              php artisan config:cache
              php artisan route:cache
              php artisan view:cache
            else
              echo "artisan file not found!"
              exit 1
            fi

            # Stop and remove existing Docker container
            sudo docker stop laravel_container || true
            sudo docker rm laravel_container || true

            # Build and run the new Docker container
            sudo docker build -t kelompok11/laravel .
            sudo docker run -d --name laravel_container -p 8000:8000 kelompok11/laravel
        EOF
    env:
      BACKEND_IP: ${{ secrets.BACKEND_IP }}
